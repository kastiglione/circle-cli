#!/usr/bin/env python

from helpers import credentials
from helpers import git
import argparse
import json
import requests
import signal
import sys
import time

URL_TEMPLATE = "https://circleci.com/api/v1.1/project/{}/{}/{}"


def signal_handle(sig, frame):
    sys.exit(0)


def main(provider, repo, number, newest_step, last_completed_step):
    url = URL_TEMPLATE.format(provider, repo, number)
    password = credentials.credentials()
    params = {"circle-token": password}
    headers = {"Content-Type": "application/json"}
    response = requests.get(url, params=params, headers=headers)
    if response.status_code != 200:
        print("Couldn't access build: {}".format(json.dumps(response.json())))
        sys.exit(1)

    blob = response.json()
    actions = map(lambda x: x["actions"][0], response.json()["steps"])
    for action in actions:
        index = int(action["step"])
        status = action["status"]
        name = action["name"]

        if newest_step < index and status == "running":
            print("{}: {}".format(name, status))
            newest_step = index

        if status != "running":
            if index > last_completed_step:
                print("{}: {}".format(name, status))
                last_completed_step = index
                newest_step = index

    if blob["lifecycle"] == "finished":
        print("Build completed")
        sys.exit(0)

    time.sleep(3)
    main(provider, repo, number, newest_step, last_completed_step)


signal.signal(signal.SIGINT, signal_handle)
if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--provider", default="github")
    parser.add_argument("-r", "--repo", default=git.current_repo_path())
    parser.add_argument("-n", "--number", help="The CircleCI build number",
                        required=True)
    arguments = parser.parse_args()

    if arguments.repo is None:
        parser.error("Repo is required\n\n{}".format(parser.format_help()))

    main(arguments.provider, arguments.repo, arguments.number, -1, -1)
