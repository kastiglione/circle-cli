#!/usr/bin/env python

from helpers import credentials
from helpers import git
import argparse
import json
import requests
import signal
import sys
import webbrowser

URL_TEMPLATE = "https://circleci.com/api/v1.1/project/{}/{}/{}/retry"


def signal_handle(sig, frame):
    sys.exit(0)


def main(provider, repo, number, no_cache, open_browser):
    url = URL_TEMPLATE.format(provider, repo, number)
    password = credentials.credentials()
    params = {"circle-token": password}
    headers = {"Content-Type": "application/json"}
    response = requests.post(url, params=params,
                             data=json.dumps({"no-cache": no_cache}),
                             headers=headers)
    build_url = response.json()["build_url"]
    print("Started new build at {}".format(build_url))

    if open_browser:
        webbrowser.open_new_tab(build_url)


signal.signal(signal.SIGINT, signal_handle)
if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-c", "--no-cache", action="store_true", default=False)
    parser.add_argument("-n", "--number", help="The CircleCI build number",
                        required=True)
    parser.add_argument("-o", "--open", action="store_true", default=False)
    parser.add_argument("-p", "--provider", default="github")
    parser.add_argument("-r", "--repo", default=git.current_repo_path())
    arguments = parser.parse_args()

    if arguments.repo is None:
        parser.error("Repo is required\n\n{}".format(parser.format_help()))

    main(arguments.provider, arguments.repo, arguments.number,
         arguments.no_cache, arguments.open)
